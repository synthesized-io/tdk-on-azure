# Default values for synthesized-tdk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository:
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- (int) Number of successful cronjobs to retain.
cronJobLimit: 3
# -- (int) Number of failed cronjobs to retain.
cronJobFailedJobsLimit: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

containerSecurityContext: {}

resources:
  limits:
  requests:


nodeSelector: {}

tolerations: []

affinity: {}

restartPolicy: Never

# -- Environment variables.
# List of supported variables: https://docs.synthesized.io/tdk/latest/user_guide/reference/docker_environment_variables
env: {}
# Synthesized config https://docs.synthesized.io/tdk/latest/user_guide/reference/configuration_reference
#  SYNTHESIZED_USERCONFIG: |
#    default_config:
#      mode: "KEEP"
#  SYNTHESIZED_INPUT_URL:
#  SYNTHESIZED_OUTPUT_URL:

# -- Sensitive environment variables that will be rendered as a new secret object
envRenderSecret: {}
#  SYNTHESIZED_INPUT_USERNAME:
#  SYNTHESIZED_INPUT_PASSWORD:
#  SYNTHESIZED_OUTPUT_USERNAME:
#  SYNTHESIZED_OUTPUT_PASSWORD:

# -- Pass the configuration directives and envRenderSecret through Helm's templating engine.
## ref: https://helm.sh/docs/developing_charts/#using-the-tpl-function
tplConfig: false

# -- Reference to an external secret that contains sensitive environment variables
# This option is useful to avoid store sensitive values in Git. You need to create the secret manually and reference it.
# If secretRef is used, the envRenderSecret parameter will be omitted (in case that it has content).
secretRef:

# Optional. Additional volumes to mount in the pod.
volumes:

# Optional. Additional volumes to mount in the pod.
volumeMounts:

# Optional. CronJob Pod annotations.
cronJobPodAnnotations: { }

# Optional. CronJob Pod labels.
cronJobPodLabels: { }

# Seconds after which Completed and Failed jobs will be removed by the TTL mechanism provided by the TTL controller.
# https://kubernetes.io/docs/concepts/workloads/controllers/job/#clean-up-finished-jobs-automatically
# Note: AWS marketplace hourly-billing depends on the Pod lifetime.
ttlSecondsAfterFinished: 60

plan:
  name: "DONOTMODIFY"
    
global:
  azure:
    identity:
      # Application's Managed Service Identity (MSI) Client ID. ClientID can be used to generate authentication token to communicate to external services like Microsoft Marketplace Metering API
      clientId: "DONOTMODIFY" # Azure populates this value at deployment time
    marketplace:
      # id of the plan purchased for the Azure Marketplace Kubernetes application,to be used in usage event payload to metering api, for more information please refer: https://learn.microsoft.com/en-us/partner-center/marketplace/marketplace-metering-service-apis
      planId: "DONOTMODIFY" # Azure populates this value at deployment time
    extension:
      # resource id of the Azure Marketplace Kubernetes application,to be used in usage event payload to metering api, for more information please refer: https://learn.microsoft.com/en-us/partner-center/marketplace/marketplace-metering-service-apis
      resourceId: "DONOTMODIFY" # application's Azure Resource ID, Azure populates this value at deployment time
    images:
      tdkoffer:
        image: tdkcli
        registry: tdkk8soffer.azurecr.io
        digest: sha256:6f2ff3d137afd4691298d1af45f8ee21771bdffda8bca55a2aa04bbeeffa5fc5
